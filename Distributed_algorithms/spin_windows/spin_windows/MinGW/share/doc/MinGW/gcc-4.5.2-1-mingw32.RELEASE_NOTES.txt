mingw32 gcc
========================================================================
GCC is the GNU Compiler Collection, a fairly portable optimizing
compiler.

This MinGW port generates code for 32-bit versions of Windows, and should
run on any 32- or 64-bit Windows operating system.

No local patches were used.

Local customizations were limited to:
* Specific command-line options for configure and make,
* moving a few files after "make install",
* replacing redundant executables by a wrapper.
For details, see the build script.

New features:
-------------

* When linking C++ modules with shared libstdc++ (the default), the
  linker does not warn anymore about activating auto-import (needs
  binutils 2.21, at least).

* Fix missing symbols in the Objective C export library.

See also: http://gcc.gnu.org/gcc-4.5/changes.html

General Notes:
--------------

* Shared libgcc: If all modules are linked with -shared-libgcc,
  exceptions can be thrown across DLL boundaries.  Note that this is
  the default for all languages other than C. To disable this, use
  -static-libgcc.

* Shared libstdc++: By default, C++ modules are linked with a DLL version
  of libstdc++. To use the static version, use the -static-libstdc++ flag.
  Note: When building and using DLLs, it is best in general not to use
  static libraries, to avoid the issue of having multiple copies of shared
  data. This applies to static libstdc++ as well.

* Translations into your language! See share\locale for a list of
  codes.  Unpack the translation archive in c:\MinGW and set the LANG
  environment variable to the code of your preferred language.

* Inline functions decorated with __declspec(dllexport) are now always
  generated and included in object files. This also applies to methods
  defined in classes decorated with __declspec(dllexport).
  This may cause a general increase in object size, since gcc generates
  copies of each dllexport'd inline function in all object files whose
  source includes the header defining the function.

Known Issues:
-------------

* The Java language is absent, pending resolution of build issues.

* The translation archive, when used, must be unpacked in c:\MinGW.

* The path "\mingw\include" on the current drive is always searched for
  header files, regardless of where the compiler is installed. So, if
  you want to keep multiple installations separated, better not to use
  "\mingw" on any drive.

Testsuite results:
------------------

The result of the testsuite run for this compiler was submitted to the
GCC project. It is available at:
http://gcc.gnu.org/ml/gcc-testresults/2011-01/msg01022.html

========================================================================

Package Description:
 
  C Language (required)
    gcc-core-4.5.2-1-mingw32-bin.tar.lzma

  C++ Language
    gcc-c++-4.5.2-1-mingw32-bin.tar.lzma
  
  Ada Language
    gcc-ada-4.5.2-1-mingw32-bin.tar.lzma
    
  Fortran Language
    gcc-fortran-4.5.2-1-mingw32-bin.tar.lzma
  
  Objective C/C++ Language
    gcc-objc-4.5.2-1-mingw32-bin.tar.lzma
  
  Shared C Runtime
    libgcc-4.5.2-1-mingw32-dll-1.tar.lzma
  
  Shared C++ Runtime
    libstdc++-4.5.2-1-mingw32-dll-6.tar.lzma

  Shared Ada Runtime
    libgnat-4.5.2-1-mingw32-dll-4.5.tar.lzma
  
  Shared Fortran Runtime 
    libgfortran-4.5.2-1-mingw32-dll-3.tar.lzma
  
  Shared Objective C/C++ Runtime
    libobjc-4.5.2-1-mingw32-dll-2.tar.lzma
  
  Shared library for OpenMP support
    libgomp-4.5.2-1-mingw32-dll-1.tar.lzma

  Shared library for stack protection support	
    libssp-4.5.2-1-mingw32-dll-0.tar.lzma
  
  GCC Documentation
    gcc-4.5.2-1-mingw32-doc.tar.lzma
  
  Translations
    gcc-4.5.2-1-mingw32-lang.tar.lzma
  
  License Information
    gcc-4.5.2-1-mingw32-lic.tar.lzma

========================================================================

Runtime requirements:
  binutils-2.21-2-mingw32-bin.tar.lzma
  libgmp-5.0.1-1-mingw32-dll-10.tar.lzma
  libmpc-0.8.1-1-mingw32-dll-2.tar.lzma
  libmpfr-2.4.1-1-mingw32-dll-1.tar.lzma
  libpthread-2.8.0-3-mingw32-dll-2.tar.lzma (for OpenMP)
  mingwrt-3.18-mingw32-dll.tar.gz
  w32api-3.15-1-mingw32-dev.tar.lzma

Build requirements:
  MinGW Compiler
    binutils-2.21-2-mingw32-bin.tar.lzma
    gcc-ada-4.5.0-1-mingw32-bin.tar.lzma
    gcc-core-4.5.0-1-mingw32-bin.tar.lzma
    libgcc-4.5.0-1-mingw32-dll-1.tar.lzma
    libgmp-5.0.1-1-mingw32-dll-10.tar.lzma
    libgnat-4.5.0-1-mingw32-dll-45.tar.lzma
    libgomp-4.5.0-1-mingw32-dll-1.tar.lzma
    libmpc-0.8.1-1-mingw32-dll-2.tar.lzma
    libmpfr-2.4.1-1-mingw32-dll-1.tar.lzma
    libpthread-2.8.0-3-mingw32-dll-2.tar.lzma (for OpenMP)
    libssp-4.5.0-1-mingw32-dll-0.tar.lzma
    mingwrt-3.18-mingw32-dev.tar.gz
    mingwrt-3.18-mingw32-dll.tar.gz
    w32api-3.15-1-mingw32-dev.tar.lzma

  Development Tools and Dependent Libraries
    gettext-0.17-1-mingw32-dev.tar.lzma
    gmp-5.0.1-1-mingw32-dev.tar.lzma
    libgmpxx-5.0.1-1-mingw32-dll-4.tar.lzma
    libgettextpo-0.17-1-mingw32-dll-0.tar.lzma
    libiconv-1.13.1-1-mingw32-dev.tar.lzma
    libiconv-1.13.1-1-mingw32-dll-2.tar.lzma
    libintl-0.17-1-mingw32-dll-8.tar.lzma
    mpc-0.8.1-1-mingw32-dev.tar.lzma
    mpfr-2.4.1-1-mingw32-dev.tar.lzma
    pthreads-w32-2.8.0-3-mingw32-dev.tar.lzma

  MSYS Environment
    bash-3.1.17-4-msys-1.0.16-bin.tar.lzma
    bison-2.4.2-1-msys-1.0.13-bin.tar.lzma
    bzip2-1.0.5-2-msys-1.0.13-bin.tar.lzma
    coreutils-5.97-3-msys-1.0.13-bin.tar.lzma
    diffutils-2.8.7.20071206cvs-2-msys-1.0.11-bin.tar.lzma
    findutils-4.4.2-2-msys-1.0.13-bin.tar.lzma
    flex-2.5.35-2-msys-1.0.13-bin.tar.lzma
    gawk-3.1.7-2-msys-1.0.13-bin.tar.lzma
    grep-2.5.4-2-msys-1.0.13-bin.tar.lzma
    less-436-2-msys-1.0.13-bin.tar.lzma
    libcrypt-1.1_1-3-msys-1.0.13-dll-0.tar.lzma
    libgdbm-1.8.3-3-msys-1.0.13-dll-3.tar.lzma
    libiconv-1.13.1-2-msys-1.0.13-dll-2.tar.lzma
    libintl-0.17-2-msys-dll-8.tar.lzma
    liblzma-4.999.9beta_20100401-1-msys-1.0.13-dll-1.tar.gz
    libregex-1.20090805-2-msys-1.0.13-dll-1.tar.lzma
    libtermcap-0.20050421_1-2-msys-1.0.13-dll-0.tar.lzma
    m4-1.4.14-1-msys-1.0.13-bin.tar.lzma
    make-3.81-3-msys-1.0.13-bin.tar.lzma
    msysCORE-1.0.16-1-msys-1.0.16-bin.tar.lzma
    msysCORE-1.0.16-1-msys-1.0.16-doc.tar.lzma
    msysCORE-1.0.16-1-msys-1.0.16-ext.tar.lzma
    msysCORE-1.0.16-1-msys-1.0.16-lic.tar.lzma
    perl-5.6.1_2-2-msys-1.0.13-bin.tar.lzma
    sed-4.2.1-2-msys-1.0.13-bin.tar.lzma
    tar-1.23-1-msys-1.0.13-bin.tar.lzma
    termcap-0.20050421_1-2-msys-1.0.13-bin.tar.lzma
    texinfo-4.13a-2-msys-1.0.13-bin.tar.lzma
    xz-4.999.9beta_20100401-1-msys-1.0.13-bin.tar.gz
    zlib-1.2.3-2-msys-1.0.13-dll.tar.lzma

Canonical homepage:
  http://gcc.gnu.org/

Canonical download:
  ftp://ftp.gnu.org/gnu/gcc/
  
License:
  GPLv3+, LGPLv3+, GPLv3+ plus runtime exception

Languages:
  C/C++/Ada/Fortran/Objective-C

========================================================================

Build instructions:

1) Unpack gcc-4.5.2-1-mingw32-src.tar.lzma
2) Install the build requirements.
2.1) If you have mingw-get in PATH, you can use as a shorcut:
        ./pkgbuild -e build_dep
     But note: this will not install the exact same versions of the
     packages listed above, but their latest versions.
2.2) MinGW should be installed in c:/mingw.
2.3) In the MSYS build shell, you should issue:
        mount /mingw /mingw
3) In the MSYS build shell, run <path-to-source>/pkgbuild
4) To generate the test results, run <path-to-source>/pkgbuild -e check
   Currently, this must be done under Cygwin, since the dejagnu tool is
   required.

See <path-to-source>/pkgbuild -h for further options.

========================================================================

---------- gcc-4.5.2-1 ----------- 2011 Jan 12 -----------
* New upstream release.
* Build script can invoke mingw-get for installing the build requirements. 
* Warn about using static libstdc++ with DLLs.
* No need to move libobjc-2.dll to /bin anymore (fixed upstream).
* Fix missing symbols in the Objective C run-time library.
* Update build instructions.

---------- gcc-4.5.0-1 ----------- 2010 Apr 19 -----------
* New upstream release.
* Warn about increase in object size due to dllexported inline functions.
* libobjc does not need -no-undefined anymore (fixed upstream).

---------- gcc-4.5.0_20100311-2 -- 2010 Mar 18 -----------
* Fixed a missing include path.

---------- gcc-4.5.0_20100311-1 -- 2010 Mar 13 -----------
* New snapshot.
